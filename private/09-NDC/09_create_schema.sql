/******************************************************************************
*
*  OMOP - Cloud Research Lab
*
*  Observational Medical Outcomes Partnership
*  (c) Foundation for the National Institutes of Health (FNIH)
*
*  Licensed under the Apache License, Version 2.0 (the "License"); you may not
*  use this file except in compliance with the License. You may obtain a copy
*  of the License at http://omop.fnih.org/publiclicense.
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
*  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Any
*  redistributions of this work or any derivative work or modification based on
*  this work should be accompanied by the following source attribution: "This
*  work is based on work by the Observational Medical Outcomes Partnership
*  (OMOP) and used under license from the FNIH at
*  http://omop.fnih.org/publiclicense.
*
*  Any scientific publication that is based on this work should include a
*  reference to http://omop.fnih.org.
*
*  Date:           2012/07/06
*
*  Temporary Vocabulary tables.
*  Usage: 
*  echo "EXIT" | sqlplus System/<SystemPass>@DEV_VOCAB @01_create_schema.sql <RXNORM_User> <Pass_RXNORM_Realise_User>
*
******************************************************************************/



SPOOL 08_create_schema_&1..log;

CREATE USER &1. --RXNORM_20120131
 IDENTIFIED BY &2. --<password>
 DEFAULT TABLESPACE USERS
 TEMPORARY TABLESPACE TEMP
 PROFILE DEFAULT
 ACCOUNT UNLOCK;
 -- 1 Role for RXNORM_20120131
 GRANT CONNECT TO &1. --RXNORM_20120131;
 ALTER USER &1. DEFAULT ROLE ALL;
 -- 5 System Privileges for RXNORM_20120131
 GRANT CREATE PROCEDURE TO &1.;
 GRANT CREATE SEQUENCE TO &1.;
 GRANT CREATE ANY INDEX TO &1.;
 GRANT CREATE DATABASE LINK TO &1.;
 GRANT CREATE TABLE TO &1.;
 -- 1 Tablespace Quotas for RXNORM_20120131
 ALTER USER &1. QUOTA UNLIMITED ON USERS;
 
 -- 6 Dev Privileges for RXNORM_20120131
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.CONCEPT TO &1.;            
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.CONCEPT_RELATIONSHIP TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.CONCEPT_ANCESTOR TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.RELATIONSHIP TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.SOURCE_TO_CONCEPT_MAP TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.VOCABULARY TO &1.;
 
 
 /*
  -- 5 Prd Privileges for RXNORM_20120131
 GRANT SELECT, INSERT, UPDATE, DELETE ON PRD.CONCEPT TO &1.;            
 GRANT SELECT, INSERT, UPDATE, DELETE ON PRD.CONCEPT_RELATIONSHIP TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON PRD.CONCEPT_ANCESTOR TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON PRD.RELATIONSHIP TO &1.;
 GRANT SELECT, INSERT, UPDATE, DELETE ON PRD.SOURCE_TO_CONCEPT_MAP TO &1.;
 --*/

 GRANT SELECT ON DEV.SEQ_CONCEPT  TO &1.;

--DROP TABLE &1..CONCEPT_STAGE;
CREATE TABLE &1..CONCEPT_STAGE(
CONCEPT_ID      INTEGER     NULL,
CONCEPT_NAME        VARCHAR2(256)   NOT NULL,
VOCABULARY_ID INTEGER NOT NULL,
CONCEPT_LEVEL       NUMBER(3)   NULL,
CONCEPT_CODE        VARCHAR2(20)    NOT NULL,
CONCEPT_CLASS       VARCHAR2(60)    NULL);

--DROP TABLE &1..CONCEPT_ANCESTOR_STAGE;
CREATE TABLE &1..CONCEPT_ANCESTOR_STAGE(
CONCEPT_ANCESTOR_MAP_ID     INTEGER     NULL,
ANCESTOR_CONCEPT_ID     INTEGER     NOT NULL,
DESCENDANT_CONCEPT_ID       INTEGER     NOT NULL,
MAX_LEVELS_OF_SEPARATION    NUMBER(3)   NULL,
MIN_LEVELS_OF_SEPARATION    NUMBER(3)   NULL);

--DROP TABLE &1..CONCEPT_RELATIONSHIP_STAGE;
CREATE TABLE &1..CONCEPT_RELATIONSHIP_STAGE(
REL_ID     INTEGER     NULL,
CONCEPT_ID_1        INTEGER     NOT NULL,
CONCEPT_ID_2        INTEGER     NOT NULL,
RELATIONSHIP_ID     INTEGER NOT NULL);

--DROP TABLE &1..CONCEPT_SYNONYM_STAGE;
CREATE TABLE &1..CONCEPT_SYNONYM_STAGE(
CONCEPT_SYNONYM_ID  INTEGER     NULL,
CONCEPT_ID      INTEGER     NOT NULL,
CONCEPT_SYNONYM_NAME    VARCHAR2(1000)  NOT NULL);

--DROP TABLE &1..RELATIONSHIP_TYPE_STAGE;
CREATE TABLE &1..RELATIONSHIP_TYPE_STAGE(
RELATIONSHIP_ID       INTEGER NOT NULL,
RELATIONSHIP_DESCRIPTION    VARCHAR2(256)   NULL);

--DROP TABLE &1..SOURCE_TO_CONCEPT_MAP_STAGE;
CREATE TABLE &1..SOURCE_TO_CONCEPT_MAP_STAGE(
SOURCE_TO_CONCEPT_MAP_ID    NUMBER(9)   NULL,
SOURCE_CODE         VARCHAR2(20)    NOT NULL,
SOURCE_CODE_DESCRIPTION     VARCHAR2(256)   NULL,
MAPPING_TYPE            VARCHAR2(20)    NOT NULL,
TARGET_CONCEPT_ID       NUMBER(8)   NOT NULL,
TARGET_VOCABULARY_ID      INTEGER NOT NULL,
SOURCE_VOCABULARY_ID      INTEGER NOT NULL,
PRIMARY_MAP              CHAR(1 BYTE));

--DROP TABLE &1..VOCABULARY_REF_STAGE;
CREATE TABLE &1..VOCABULARY_REF_STAGE(
VOCABULARY_NAME     VARCHAR2(256)   NOT NULL,
VOCABULARY_CODE     VARCHAR2(3) NOT NULL);

CREATE TABLE &1..CONCEPT_TREE_STAGE
(
  CONCEPT_ANCESTOR_MAP_ID   INTEGER,
  ANCESTOR_CONCEPT_ID       INTEGER             NOT NULL,
  DESCENDANT_CONCEPT_ID     INTEGER             NOT NULL,
  MAX_LEVELS_OF_SEPARATION  NUMBER(3),
  MIN_LEVELS_OF_SEPARATION  NUMBER(3)
)
;

create index &1..x_mp on &1..SOURCE_TO_CONCEPT_MAP_STAGE   SUBSTR (SOURCE_CODE, 1, 9);

CREATE INDEX &1..XAC ON &1..CONCEPT_TREE_STAGE
(DESCENDANT_CONCEPT_ID, ANCESTOR_CONCEPT_ID)
;


CREATE INDEX &1..XF_CONCEPT_STAGE_ID ON &1..CONCEPT_STAGE (
        CONCEPT_ID                       ASC);

CREATE INDEX &1..XF_CONCEPT_STAGE_CODE2 ON &1..CONCEPT_STAGE (
        VOCABULARY_ID          ASC,
        CONCEPT_CODE                     ASC);

CREATE INDEX &1..XF_CONCEPT_STAGE_CODE ON &1..CONCEPT_STAGE (
        VOCABULARY_ID          ASC,
        CONCEPT_LEVEL                    ASC,
        CONCEPT_CODE                     ASC);

CREATE INDEX &1..XF_CR_STAGE_IDS ON &1..CONCEPT_RELATIONSHIP_STAGE (
        CONCEPT_ID_1                     ASC,
        CONCEPT_ID_2                     ASC);

CREATE INDEX &1..XF_CR_STAGE_ID ON &1..CONCEPT_RELATIONSHIP_STAGE (
        RELATIONSHIP_ID                  ASC);

CREATE INDEX &1..xrel_STAGE_3cd ON &1..CONCEPT_RELATIONSHIP_STAGE (
        CONCEPT_ID_1, RELATIONSHIP_ID,  CONCEPT_ID_2);

CREATE INDEX &1..xrel_STAGE_2cd ON &1..CONCEPT_RELATIONSHIP_STAGE (
        CONCEPT_ID_2, CONCEPT_ID_1);

CREATE INDEX &1..xmap_STAGE_4cd ON &1..SOURCE_TO_CONCEPT_MAP_STAGE (
    SOURCE_CODE 
   ,SOURCE_VOCABULARY_ID 
   ,MAPPING_TYPE           
   ,TARGET_VOCABULARY_ID);
   
CREATE INDEX &1..xmap_STAGE_tcd ON &1..SOURCE_TO_CONCEPT_MAP_STAGE (
    TARGET_VOCABULARY_ID);   

CREATE INDEX &1..XAN_2CD_ ON &1..CONCEPT_ANCESTOR_STAGE
(ANCESTOR_CONCEPT_ID, DESCENDANT_CONCEPT_ID);   

---------------------
CREATE TABLE &1..RETCGC0_ETC_GCNSEQNO
(
  GCN_SEQNO            NUMBER(6)                NOT NULL,
  ETC_ID               NUMBER(8)                NOT NULL,
  ETC_COMMON_USE_IND   VARCHAR2(1 BYTE),
  ETC_DEFAULT_USE_IND  VARCHAR2(1 BYTE)
);

CREATE TABLE &1..RATCGC0_ATC_GCNSEQNO_LINK
(
  GCN_SEQNO  NUMBER(6)                          NOT NULL,
  ATC        VARCHAR2(7 BYTE)                   NOT NULL,
  ATC_VER    NUMBER(6)
);

CREATE TABLE &1..RNDC14_NDC_MSTR
(
  NDC         VARCHAR2(11 BYTE)                 NOT NULL,
  LBLRID      VARCHAR2(6 BYTE),
  GCN_SEQNO   NUMBER(6),
  PS          NUMBER(11,3),
  DF          VARCHAR2(1 BYTE),
  AD          VARCHAR2(20 BYTE),
  LN          VARCHAR2(30 BYTE),
  BN          VARCHAR2(30 BYTE),
  PNDC        VARCHAR2(11 BYTE),
  REPNDC      VARCHAR2(11 BYTE),
  NDCFI       VARCHAR2(1 BYTE),
  DADDNC      DATE,
  DUPDC       DATE,
  DESI        VARCHAR2(1 BYTE),
  DESDTEC     DATE,
  DESI2       VARCHAR2(1 BYTE),
  DES2DTEC    DATE,
  DEA         VARCHAR2(1 BYTE),
  CL          VARCHAR2(1 BYTE),
  GPI         VARCHAR2(1 BYTE),
  HOSP        VARCHAR2(1 BYTE),
  INNOV       VARCHAR2(1 BYTE),
  IPI         VARCHAR2(1 BYTE),
  MINI        VARCHAR2(1 BYTE),
  MAINT       VARCHAR2(1 BYTE),
  OBC         VARCHAR2(2 BYTE),
  OBSDTEC     DATE,
  PPI         VARCHAR2(1 BYTE),
  STPK        VARCHAR2(1 BYTE),
  REPACK      VARCHAR2(1 BYTE),
  TOP200      VARCHAR2(3 BYTE),
  UD          VARCHAR2(1 BYTE),
  CSP         NUMBER(7),
  NDL_GDGE    NUMBER(5,3),
  NDL_LNGTH   NUMBER(5,3),
  SYR_CPCTY   NUMBER(5,3),
  SHLF_PCK    NUMBER(7),
  SHIPPER     NUMBER(7),
  HCFA_FDA    VARCHAR2(2 BYTE),
  HCFA_UNIT   VARCHAR2(3 BYTE),
  HCFA_PS     NUMBER(11,3),
  HCFA_APPC   DATE,
  HCFA_MRKC   DATE,
  HCFA_TRMC   DATE,
  HCFA_TYP    VARCHAR2(1 BYTE),
  HCFA_DESC1  DATE,
  HCFA_DESI1  VARCHAR2(1 BYTE),
  UU          VARCHAR2(1 BYTE),
  PD          VARCHAR2(10 BYTE),
  LN25        VARCHAR2(25 BYTE),
  LN25I       VARCHAR2(1 BYTE),
  GPIDC       DATE,
  BBDC        DATE,
  HOME        VARCHAR2(1 BYTE),
  INPCKI      VARCHAR2(1 BYTE),
  OUTPCKI     VARCHAR2(1 BYTE),
  OBC_EXP     VARCHAR2(2 BYTE),
  PS_EQUIV    NUMBER(11,3),
  PLBLR       VARCHAR2(1 BYTE),
  TOP50GEN    VARCHAR2(2 BYTE),
  OBC3        VARCHAR2(3 BYTE),
  GMI         VARCHAR2(1 BYTE),
  GNI         VARCHAR2(1 BYTE),
  GSI         VARCHAR2(1 BYTE),
  GTI         VARCHAR2(1 BYTE),
  NDCGI1      VARCHAR2(1 BYTE),
  HCFA_DC     VARCHAR2(1 BYTE),
  LN60        VARCHAR2(60 BYTE)
);


/* Formatted on 16.08.2012 12:18:18 (QP5 v5.163.1008.3004) */
CREATE TABLE &1..FDA_NDC_PACKAGES
(
   PRODUCTNDC           VARCHAR (10),
   NDCPACKAGECODE       VARCHAR (12),
   PACKAGEDESCRIPTION   VARCHAR (256)
);

CREATE TABLE &1..FDA_NDC_PRODUCTS
(
   PRODUCTID		       VARCHAR (256) ,   
   PRODUCTNDC                  VARCHAR (256),
   PRODUCTTYPENAME             VARCHAR (256),
   PROPRIETARYNAME             VARCHAR (256),
   PROPRIETARYNAMESUFFIX       VARCHAR (256),
   NONPROPRIETARYNAME          VARCHAR (256),
   DOSAGEFORMNAME              VARCHAR (256),
   ROUTENAME                   VARCHAR (256),
   STARTMARKETINGDATE          VARCHAR (256),
   ENDMARKETINGDATE            VARCHAR (256),
   MARKETINGCATEGORYNAME       VARCHAR (256),
   APPLICATIONNUMBER           VARCHAR (256),
   LABELERNAME                 VARCHAR (256),
   SUBSTANCENAME               VARCHAR (256),
   ACTIVE_NUMERATOR_STRENGTH   VARCHAR (256),
   ACTIVE_INGRED_UNIT          VARCHAR (256),
   PHARM_CLASSES               VARCHAR (256),
   DEASCHEDULE                 VARCHAR (256)
);

CREATE INDEX &1..XFDA_NDC_ ON &1..FDA_NDC_PRODUCTS
(PRODUCTNDC);
---------------------

--/*   
CREATE INDEX &1..XCONS_RXAUI_CODE ON &1..RXNCONSO (
        RXAUI, TTY);

CREATE INDEX &1..XCONS_RXCUI_SAB_CODE ON &1..RXNCONSO (
        RXCUI, SAB, CODE);

CREATE INDEX &1..XCONS_SAB_TTY_CODE ON &1..RXNCONSO (
        SAB, TTY, CODE);

CREATE INDEX &1..XCONS_SAB_TTY_RXCUI ON &1..RXNCONSO (
        SAB, TTY, RXCUI);

CREATE INDEX &1..XCONS_TTY_SAB ON &1..RXNCONSO (
        TTY, SAB);

CREATE INDEX &1..XCONS_4cd ON &1..RXNCONSO (
        "SAB", "TTY", "CODE", "RXCUI");

CREATE INDEX &1..XSAT_SAB_ATV ON &1..RXNSAT (
        SAB, ATV);
--*/

create index &1..xndc9m on &1..SOURCE_TO_CONCEPT_MAP_STAGE (SUBSTR (SOURCE_CODE, 1, 9));

exit;

